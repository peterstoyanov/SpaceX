@model IEnumerable<SpaceX.Client.Models.DataViewModel>

<partial name="_Introduction" />
<partial name="_MissionPatches" />
<partial name="_ContactMe" />

<!-- Launch Plans -- Section 3 -->
<section id="tm-section-3" class="tm-section">
    <h2>SpaceX Official upcoming and past launches</h2>
    <p>
        Find by mission name: <input id="SearchString" name="SearchString" type="text" value="" />
        <input type="button" value="Search" id="btnSearch" />
    </p>
    <div id="LaunchList">
        <partial name="LaunchList" />
    </div>
</section>

@section scripts
{
    <script type="text/javascript">
        // Adding popstate event listener to handle browser back button
        window.addEventListener("popstate", function (e) {
            $.ajax({
                url: location.href,
                success: function (result) {
                    $('#LaunchList').html(result);
                }
            });
        });

        function ChangeUrl(page, url) {
            if (typeof (history.pushState) != "undefined") {
                var obj = { Page: page, Url: url };
                history.pushState(null, obj.Page, obj.Url);
            } else {
                alert("Browser does not support HTML5.");
            }
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function search() {
            $.ajax({
                url: "/Home/Index?searchString=" + $('#SearchString').val(),
                success: function (result) {
                    ChangeUrl("index", "/Home/Index?searchString=" + $('#SearchString').val());
                    $('#LaunchList').html(result);
                }
            });
        }

        $(function () {
            $("#btnSearch").click(function () {
                search();
            });

            $("#SearchString").keypress(function (e) {
                if (e.keyCode == 13) {
                    search();
                }
            });
            $('body').on('click', '#LaunchList .pagination a', function (event) {
                event.preventDefault();
                console.log('page');
                var searchString = $('#SearchString').val();
                if (searchString == undefined || searchString == '') {
                    searchString = '';
                } else {
                    searchString = '&searchString=' + searchString;
                }
                var url = $(this).attr('href') + searchString;
                console.log(url);
                $.ajax({
                    url: url,
                    success: function (result) {
                        ChangeUrl('index', url);
                        $('#LaunchList').html(result);
                    }
                });
            });


            $('body').on('click', '#LaunchList .table a', function (event) {

                event.preventDefault();

                var searchString = $('#SearchString').val();
                if (searchString == undefined || searchString == '') {
                    searchString = '';
                } else {
                    searchString = '&searchString=' + searchString;
                }

                var columnToSort = $(this).text();
                var currentSortOption = getUrlVars()['sortOption'];
                console.log(currentSortOption);
                var sort;
                switch (currentSortOption) {
                    case "flight":
                        sort = 'sortOption=flight_desc';
                        break;
                    case "flight_desc":
                        sort = 'sortOption=flight';
                        break;
                    case "mission":
                        sort = 'sortOption=mission_desc';
                        break;
                    case "mission_desc":
                        sort = 'sortOption=mission';
                        break;
                    case "date":
                        sort = 'sortOption=date_desc';
                        break;
                    case "date_desc":
                        sort = 'sortOption=date';
                        break;
                    case "rocketName":
                        sort = 'sortOption=rocketName_desc';
                        break;
                    case "rocketName_desc":
                        sort = 'sortOption=rocketName';
                        break;
                    case "rocketType":
                        sort = 'sortOption=rocketType_desc';
                        break;
                    case "rocketType_desc":
                        sort = 'sortOption=rocketType';
                        break;
                    default:
                        sort = '';
                        break;
                }

                switch (columnToSort) {
                    case 'FlightNumber':
                        if (currentSortOption != 'flight' && currentSortOption != 'flight_desc') {
                            sort = 'sortOption=flight';
                        }
                        break;
                    case 'MissionName':
                        if (currentSortOption != 'mission' && currentSortOption != 'mission_desc') {
                            sort = 'sortOption=mission';
                        }
                        break;
                    case 'LaunchDate':
                        if (currentSortOption != 'date' && currentSortOption != 'date_desc') {
                            sort = 'sortOption=date';
                        }
                        break;
                    case 'RocketName':
                        if (currentSortOption != 'rocketName' && currentSortOption != 'rocketName_desc') {
                            sort = 'sortOption=rocketName';
                        }
                        break;
                    case 'RocketType':
                        if (currentSortOption != 'rocketType' && currentSortOption != 'rocketType_desc') {
                            sort = 'sortOption=rocketType';
                        }
                        break;
                    default:
                        sort = '';
                        break;

                }
                if (sort != '' & searchString != '') {
                    sort = '&' + sort;
                }
                var url = '/Home/Index?' + searchString + sort;
                $.ajax({
                    url: url,
                    success: function (result) {
                        ChangeUrl('index', url);
                        $('#LaunchList').html(result);
                    }
                });
            });

        });
    </script>
}

